[{"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\TableForm\\TableForms.js":"4","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\calender\\Calender.js":"5","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\WeeklyGoals\\WeeklyGoalsList.js":"6","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Header\\Header.js":"7","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Footer\\Footer.js":"8","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Timer\\Timer.js":"9","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Loading\\Loading.jsx":"10","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\TableForm\\TableForm.js":"11","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\WeeklyGoals\\WeeklyGoals.js":"12","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\WeeklyGoals\\WeeklyGoalsForm.js":"13","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\categories\\calendarTask.js":"14","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\useTable.js":"15","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\useForm.js":"16","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\Controls.js":"17","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\Select.js":"18","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\Input.js":"19","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\Button.js":"20","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Popup.js":"21","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\ActionButton.js":"22","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Timer\\TimerProc.js":"23","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Notification.js":"24","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\ConfirmDialog.js":"25"},{"size":472,"mtime":1614914354469,"results":"26","hashOfConfig":"27"},{"size":3084,"mtime":1615946628504,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1614727596936,"results":"29","hashOfConfig":"27"},{"size":6347,"mtime":1616198915672,"results":"30","hashOfConfig":"27"},{"size":460,"mtime":1614937686169,"results":"31","hashOfConfig":"27"},{"size":1324,"mtime":1614937686167,"results":"32","hashOfConfig":"27"},{"size":1094,"mtime":1614937686156,"results":"33","hashOfConfig":"27"},{"size":1541,"mtime":1614937686152,"results":"34","hashOfConfig":"27"},{"size":2205,"mtime":1615946628511,"results":"35","hashOfConfig":"27"},{"size":790,"mtime":1615938454739,"results":"36","hashOfConfig":"27"},{"size":3261,"mtime":1616149958894,"results":"37","hashOfConfig":"27"},{"size":1195,"mtime":1614937686164,"results":"38","hashOfConfig":"27"},{"size":1453,"mtime":1614937686166,"results":"39","hashOfConfig":"27"},{"size":1515,"mtime":1616198456160,"results":"40","hashOfConfig":"27"},{"size":3823,"mtime":1615946628519,"results":"41","hashOfConfig":"27"},{"size":1201,"mtime":1614937686170,"results":"42","hashOfConfig":"27"},{"size":249,"mtime":1615946628516,"results":"43","hashOfConfig":"27"},{"size":940,"mtime":1614931025047,"results":"44","hashOfConfig":"27"},{"size":478,"mtime":1615946628517,"results":"45","hashOfConfig":"27"},{"size":768,"mtime":1614914354464,"results":"46","hashOfConfig":"27"},{"size":1322,"mtime":1615946628507,"results":"47","hashOfConfig":"27"},{"size":829,"mtime":1615946628514,"results":"48","hashOfConfig":"27"},{"size":2196,"mtime":1615946628513,"results":"49","hashOfConfig":"27"},{"size":957,"mtime":1616150889342,"results":"50","hashOfConfig":"27"},{"size":2154,"mtime":1616545947987,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1m086yl",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\index.js",[],["106","107"],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\App.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\TableForm\\TableForms.js",["108"],"import React, {useState} from 'react'\r\nimport TableForm from './TableForm'\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core'\r\nimport useTable from \"../../components/useTable\"\r\nimport * as calendarTask from '../../categories/calendarTask'\r\nimport Controls from \"../../components/controls/Controls\"\r\nimport { Search } from \"@material-ui/icons\"\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport Popup from '../Popup';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Notification from \"../Notification\"\r\nimport ConfirmDialog from \"../ConfirmDialog\"\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n    newButton : {\r\n        position: 'absoulte', \r\n        left: '70px'\r\n    }\r\n}))\r\n\r\nconst headCells = [\r\n    {id: 'task' , label:'Task Name'},\r\n    {id: 'time' , label:'Allocated Time'},\r\n    {id: 'category' , label:'Category'},\r\n    {id: 'complete', label:\"Mark Complete\"},\r\n    {id: 'actions', label:'Actions', disableSorting: true}\r\n]\r\n\r\nexport default function TableForms() {\r\n\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null); \r\n    const [records, setRecords] = useState(calendarTask.getAllTasks()); \r\n    const [filterFn, setFilterFn] = useState({fn:items => {return items;}})\r\n    const [openPopup, setOpenPopup] = useState(false); \r\n    const [notify, setNotify] = useState({isOpen: false, message:'', type:''})\r\n    const [confirmDialog, setconfirmDialog] = useState({isOpen:false, title:'', subTitle:''})\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    }=useTable(records, headCells, filterFn);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn:items => {\r\n                if(target.value === \"\")\r\n                    return items; \r\n                    else \r\n                    return items.filter(x => x.task.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const addOrEdit = (task, resetForm) => {\r\n        if (task.id === 0)\r\n            calendarTask.insertNewTask(task)\r\n        else \r\n            calendarTask.updateTask(task)\r\n        resetForm()         \r\n        setRecordForEdit(null)\r\n        setOpenPopup(false)\r\n        setRecords(calendarTask.getAllTasks())\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Submitted Successfully',\r\n            type: 'success'\r\n        })\r\n    }\r\n\r\n    const openInPopup = item => {\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const onDelete = id => {\r\n        if(window.confirm('Are you sure to delete this record?')) {\r\n            calendarTask.deleteTask(id); \r\n            setRecords(calendarTask.getAllTasks())\r\n            setNotify({\r\n                isOpen: true,\r\n                message: 'Deleted Successfully',\r\n                type: 'error'\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Paper className={classes.pageContent}>\r\n            <Toolbar>\r\n        <Controls.Input\r\n            label=\"Search Task\"\r\n            className = {classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment:(<InputAdornment position=\"start\">\r\n                        <Search/> \r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n            <Controls.Button\r\n            text = \"Add New\"\r\n            variant = \"outlined\"\r\n            startIcon = {<AddIcon/>}\r\n            className = {classes.newButton}\r\n            onClick = {() => {setOpenPopup(true); setRecordForEdit(null);}}\r\n            />\r\n            </Toolbar>\r\n            <TblContainer>\r\n                <TblHead/>\r\n                <TableBody>\r\n                    {\r\n                        recordsAfterPagingAndSorting().map(item =>\r\n                            (<TableRow key={item.id}>\r\n                                <TableCell>{item.task}</TableCell>\r\n                                <TableCell>{item.length}</TableCell>\r\n                                <TableCell>{item.category}</TableCell>\r\n                                <TableCell>{item.markComplete}</TableCell>\r\n                                <TableCell>\r\n                                    <Controls.ActionButton\r\n                                    color=\"primary\"\r\n                                    onClick = {()=> {openInPopup(item)}}>\r\n                                        <EditOutlinedIcon fontSize=\"small\"/>\r\n                                    </Controls.ActionButton>                                \r\n                                    <Controls.ActionButton\r\n                                        color=\"secondary\"\r\n                                        onClick={() => {\r\n                                            setconfirmDialog({\r\n                                                isOpen: true,\r\n                                                title:'Are you sure to delete this record?',\r\n                                                subTitle: \"You can't undo this operation\"\r\n\r\n                                            })\r\n                                        }}>\r\n                                        <CloseIcon fontSize=\"small\"/>\r\n                                    </Controls.ActionButton> \r\n                                </TableCell>\r\n                            </TableRow>))                            \r\n                    }\r\n                </TableBody>\r\n            </TblContainer>\r\n            <TblPagination/>            \r\n        </Paper>\r\n        <Popup\r\n            title = \"Task Form\"\r\n            openPopup = {openPopup}\r\n            setOpenPopup = {setOpenPopup}\r\n        >\r\n            <TableForm\r\n            recordForEdit = {recordForEdit}\r\n            addOrEdit={addOrEdit}/>\r\n        </Popup>\r\n        <Notification\r\n        notify={notify}\r\n        setNotify={setNotify}\r\n        />\r\n        <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setconfirmDialog={setconfirmDialog}\r\n        />\r\n       </>\r\n        \r\n    )\r\n}","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\calender\\Calender.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\WeeklyGoals\\WeeklyGoalsList.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Header\\Header.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Timer\\Timer.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Loading\\Loading.jsx",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\TableForm\\TableForm.js",["109"],"import React, { useEffect } from 'react'\r\nimport { Grid, TextField } from '@material-ui/core'\r\nimport { useForm, Form } from '../useForm'\r\nimport Controls from '../controls/Controls'\r\nimport * as calendarTask from '../../categories/calendarTask'\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    task: '',\r\n    length: '',\r\n    category: '',\r\n    markComplete: '0%'\r\n}\r\n\r\nexport default function TableForm(props) {\r\n    const {addOrEdit, recordForEdit} = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = {...errors}\r\n        if('task' in fieldValues)\r\n        temp.task = fieldValues.task ? \"\" : \"This field is required\"      \r\n        if('category' in fieldValues)  \r\n        temp.category =  fieldValues.category.length !== 0 ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if(fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (validate()) {\r\n            addOrEdit(values, resetForm);\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(()=>{ \r\n        if(recordForEdit !== null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        name=\"task\"\r\n                        label=\"Task\"\r\n                        value={values.task}\r\n                        onChange={handleInputChange}\r\n                        error={errors.task}\r\n                    />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            name=\"length\"\r\n                            label=\"Due date (time)\"\r\n                            type=\"datetime-local\"                            \r\n                            defaultValue=\"2021-02-24T10:30\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Controls.Select\r\n                        name=\"category\"\r\n                        label=\"Category\"\r\n                        values={values.category}\r\n                        onChange={handleInputChange}\r\n                        options={calendarTask.getCategoryCollection()}\r\n                        error={errors.category}                        \r\n                    />\r\n\r\n                    <br /><br />\r\n\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Add\" />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\WeeklyGoals\\WeeklyGoals.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\WeeklyGoals\\WeeklyGoalsForm.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\categories\\calendarTask.js",["110"],"const KEYS = {\r\n    taskId: 'taskId',\r\n    tasks: 'tasks'\r\n}\r\n\r\nexport const getCategoryCollection = ()=> ([\r\n    {id: '1', category: 'Work'},\r\n    {id: '2', category: 'Health'},\r\n    {id: '3', category: 'Hobby'},\r\n    {id: '4', category: 'Family'},\r\n    {id: '5', category: 'Routine'},\r\n    {id: '6', category: 'Friends'},\r\n    {id: '7', category: 'Education'},\r\n    {id: '8', category: 'Entertainment'}\r\n])\r\n\r\nexport function insertNewTask(data) {\r\n    let tasks = getAllTasks();    \r\n    data['id'] = generateTaskId();\r\n\r\n    tasks.push(data); \r\n\r\n    localStorage.setItem(KEYS.tasks, JSON.stringify(tasks))\r\n}\r\n\r\nexport function updateTask(data) {\r\n    let tasks = getAllTasks();\r\n    let recordIndex = tasks.findIndex(x => x.id === data.id);\r\n    tasks[recordIndex] = { ...data }\r\n    localStorage.setItem(KEYS.tasks, JSON.stringify(tasks));\r\n}\r\n\r\nexport function deleteTask(id) {\r\n    let tasks = getAllTasks();\r\n    tasks = tasks.filter(x => x.id != id)\r\n    localStorage.setItem(KEYS.tasks, JSON.stringify(tasks)); \r\n}\r\n\r\nexport function generateTaskId() {\r\n    if (localStorage.getItem(KEYS.taskId) == null)\r\n        localStorage.setItem(KEYS.taskId, '0')\r\n\r\n    var id = parseInt(localStorage.getItem(KEYS.taskId))\r\n\r\n    localStorage.setItem(KEYS.taskId, (++id).toString())\r\n    return id;\r\n}\r\n\r\nexport function getAllTasks() {\r\n    if (localStorage.getItem(KEYS.tasks) == null)\r\n        localStorage.setItem(KEYS.tasks, JSON.stringify([]));\r\n\r\n    return JSON.parse(localStorage.getItem(KEYS.tasks));\r\n}","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\useTable.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\useForm.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\Controls.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\Select.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\Input.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\Button.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Popup.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\ActionButton.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Timer\\TimerProc.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Notification.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\ConfirmDialog.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":87,"column":11,"nodeType":"117","messageId":"118","endLine":87,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":46,"column":8,"nodeType":"121","endLine":46,"endColumn":23,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":35,"column":36,"nodeType":"125","messageId":"126","endLine":35,"endColumn":38},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'onDelete' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["129"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"132","text":"133"},[1244,1259],"[recordForEdit, setValues]"]